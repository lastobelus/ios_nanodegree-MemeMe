Meme.swift
	var topText: String
	var bottomText: String
	var image: UIImage
	var memedImage: UIImage
	enum  Keys:String
	topText,
	bottomText,
	image,
	memedImage
	func key() -> String
	init(
    topText: String,
    bottomText: String,
    image: UIImage,
    memedImage: UIImage)
	func encodeWithCoder(aCoder: NSCoder)
	required convenience init?(coder aDecoder: NSCoder)
SentMemesTableViewController.swift
	var memeForDeletionIndexPath: NSIndexPath?
	var movingRowIndexPath: NSIndexPath?
	var movingRowSnapshot: UIView?
	var canMemeMoveHorizontally = false
	var memesListView: UIView
	override func viewDidAppear(animated: Bool)
	override func numberOfSectionsInTableView(tableView: UITableView) -> Int
	override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int
	override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell
	override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath)
	@IBAction func shouldDeleteMeme(segue: UIStoryboardSegue)
	func performDeleteMeme(alertAction: UIAlertAction!) -> Void
	func deleteMemeAtIndexPath(indexPath:NSIndexPath)
	func cancelDeleteMeme(alertAction: UIAlertAction!)
	@IBAction func longPress(sender: UILongPressGestureRecognizer)
	func indexPathOfMemeAtLocation(location: CGPoint) -> NSIndexPath?
	func cellViewForMemeAtIndexPath(indexPath: NSIndexPath) -> UIView?
	func moveMemeAtIndexPath(from:NSIndexPath, toIndexPath to:NSIndexPath)
	override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)
	func indexOfSendingCell(sender:AnyObject?) -> Int?
Preferences.swift
	static let instance = Preferences()
	enum  Keys:String
	ExpandImageTopPastStatusBarWhenTyping
	func key() -> String
	let expandImageTopPastStatusBarWhenTyping:Bool
	init()
MemeEditorTextHandling.swift
	func textFieldDidBeginEditing(textField: UITextField)
	func textFieldDidEndEditing(textField: UITextField)
	func subscribeToKeyboardNotifications()
	func unsubscribeFromKeyboardNotifications()
	func keyboardWillShow(notification: NSNotification)
	func keyboardWillHide(notification: NSNotification)
	private func getKeyboardHeight(notification: NSNotification) -> CGFloat
MemeCollectionViewCell.swift
	@IBOutlet weak var originalImage: UIImageView!
	@IBOutlet weak var topText: UILabel!
	@IBOutlet weak var bottomText: UILabel!
	let memeTextFontSize:CGFloat = 15
	let memeTextStrokeSize:CGFloat = 4.0
	override func awakeFromNib()
InterfaceCalloutView.swift
	let minScale = CGAffineTransformMakeScale(0.01, 0.01)
	let maxScale = CGAffineTransformMakeScale(1.0, 1.0)
	let startTranslate = CGAffineTransformMakeTranslation(50, 150)
	let endTranslate = CGAffineTransformMakeTranslation(0, 0)
	let comeInDuration:NSTimeInterval = 0.8
	let goOutDuration:NSTimeInterval = 0.4
	let showDuration:NSTimeInterval = 4
	func fire()
	override func drawRect(rect: CGRect)
	func drawTriangle()
MemeEditorViewController.swift
	@IBOutlet weak var topTextField: UITextField!
	@IBOutlet weak var bottomTextField: UITextField!
	var textFieldDefaultText: [UITextField:String] = [:]
	@IBOutlet weak var imageView: UIImageView!
	@IBOutlet weak var topToolbar: UIToolbar!
	var topToolbarHeightDefault: CGFloat!
	var topToolbarShouldHide = false
	@IBOutlet weak var bottomToolbar: UIToolbar!
	@IBOutlet weak var cameraButton: UIBarButtonItem!
	var bottomToolbarHeightDefault: CGFloat!
	var bottomToolbarShouldHide = false
	@IBOutlet weak var cancelButton: UIBarButtonItem!
	@IBOutlet weak var actionButton: UIBarButtonItem!
	@IBOutlet var saveButton: UIBarButtonItem!
	var indexOfSaveButton:Int = 0
	@IBOutlet weak var topTextLeftConstraint: NSLayoutConstraint!
	@IBOutlet weak var topTextRightConstraint: NSLayoutConstraint!
	@IBOutlet weak var topTextTopConstraint: NSLayoutConstraint!
	@IBOutlet weak var bottomTextLeftConstraint: NSLayoutConstraint!
	@IBOutlet weak var bottomTextRightConstraint: NSLayoutConstraint!
	@IBOutlet weak var bottomTextBottomConstraint: NSLayoutConstraint!
	@IBOutlet weak var imageViewTopConstraint: NSLayoutConstraint!
	@IBOutlet weak var imageViewBottomConstraint: NSLayoutConstraint!
	@IBOutlet weak var topToolbarTopConstraint: NSLayoutConstraint!
	@IBOutlet weak var bottomToolbarBottomConstraint: NSLayoutConstraint!
	@IBOutlet weak var shareMemeIndicatorView: InterfaceCalloutView!
	var currentKeyboardHeight:CGFloat = 0.0
	var pickingImage = false
	var instructionsShown = false
	var activeTextField: UITextField?
	var isFirstMeme: Bool
	let memeTextAttributes = MemeTextStyle(fontSize: 40, strokeSize: 5.0).attributes
	let imagePicker = UIImagePickerController()
	let animationDuration:NSTimeInterval = 0.4
	override func viewDidLoad()
	override func viewWillDisappear(animated: Bool)
	override func viewDidAppear(animated: Bool)
	func textIsDefault(textField: UITextField) -> Bool
	private func populateViewFromMeme(meme:Meme)
	private func configureTextField(textField:UITextField)
UniformFlowLayoutCalculator.swift
	func aspect() -> CGFloat
	var desiredSizeInLandscape:CGSize
	var minimumWidth:CGFloat
	var desiredSpacing:CGFloat
	var scale:CGFloat = 1.0
MemeEditorImageHandling.swift
	func imagePickerController(picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String: AnyObject])
	func imagePickerControllerDidCancel(picker: UIImagePickerController)
	func cropViewController(cropViewController: TOCropViewController!, didCropToImage image: UIImage!, withRect cropRect: CGRect, angle: Int)
	func removeImage()
MemeDetailViewController.swift
	@IBOutlet weak var memeImage: UIImageView!
	override func viewDidLoad()
AppDelegate.swift
	class AppDelegate: UIResponder, UIApplicationDelegate
	var window: UIWindow?
	func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool
	func applicationWillResignActive(application: UIApplication)
	func applicationDidEnterBackground(application: UIApplication)
	func applicationWillEnterForeground(application: UIApplication)
	func applicationDidBecomeActive(application: UIApplication)
	func applicationWillTerminate(application: UIApplication)
MemeTableViewCell.swift
	@IBOutlet weak var originalImage: UIImageView!
	@IBOutlet weak var topText: UILabel!
	@IBOutlet weak var bottomText: UILabel!
	@IBOutlet weak var expandedTopText: UILabel!
	@IBOutlet weak var expandedBottomText: UILabel!
	let memeTextFontSize:CGFloat = 15
	let memeTextStrokeSize:CGFloat = 4.0
	override func awakeFromNib()
	override func setSelected(selected: Bool, animated: Bool)
MemesViewer.swift
	var memesList: [Meme] { get }
	var movingRowIndexPath: NSIndexPath? { get set }
	var movingRowSnapshot: UIView? { get set }
	var memesListView: UIView { get }
	var canMemeMoveHorizontally: Bool {get}
	func populateCell(cell:MemesViewerCell, withMeme meme:Meme)
	func editIfEmpty()
	func indexOfSendingCell(sender:AnyObject?) -> Int?
	func prepareForShowDetailSegue(segue: UIStoryboardSegue, sender: AnyObject?) -> Bool
	func handleMemeReorderGesture(sender: UILongPressGestureRecognizer)
	func indexPathOfMemeAtLocation(location: CGPoint) -> NSIndexPath?
	func cellViewForMemeAtIndexPath(indexPath: NSIndexPath) -> UIView?
	func moveMemeAtIndexPath(from:NSIndexPath, toIndexPath to:NSIndexPath)
	static var editSegueIdentifier = "createMemeSegue"
	static var showDetailSegueIdentifier = "showMemeDetailSegue"
	static var editMemeSegueIdentifier = "editMemeSegue"
	static var didFinishEditingMemeSegueIdentifier = "didFinishEditingMemeSeque"
	static var shouldDeleteMemeSegueIdentifier = "shouldDeleteMemeSeque"
	static var memeCellIdentifier = "MemeCell"
	var memesList: [Meme]
	func editIfEmpty()
	func prepareForShowDetailSegue(segue: UIStoryboardSegue, sender: AnyObject?) -> Bool
MemesViewerCell.swift
	var originalImage: UIImageView! { get }
	var topText: UILabel! { get }
	var bottomText: UILabel! { get }
	var memeTextFontSize:CGFloat { get }
	var memeTextStrokeSize:CGFloat { get }
	optional var expandedTopText: UILabel! { get }
	optional var expandedBottomText: UILabel! { get }
SentMemesCollectionViewController.swift
	@IBOutlet weak var flowLayout: UICollectionViewFlowLayout!
	var movingRowIndexPath: NSIndexPath?
	var movingRowSnapshot: UIView?
	var canMemeMoveHorizontally = true
	var memesListView: UIView
	var layoutCalculator = UniformFlowLayoutCalculator(
	override func viewDidLoad()
	override func viewDidAppear(animated: Bool)
	override func numberOfSectionsInCollectionView(collectionView: UICollectionView) -> Int
	override func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int
	override func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell
	override func collectionView(collectionView: UICollectionView, shouldSelectItemAtIndexPath indexPath: NSIndexPath) -> Bool
	override func viewWillTransitionToSize(size: CGSize, withTransitionCoordinator coordinator: UIViewControllerTransitionCoordinator)
	@IBAction func scaleGrid(sender: UIPinchGestureRecognizer)
	@IBAction func longPress(sender: UILongPressGestureRecognizer)
	func indexPathOfMemeAtLocation(location: CGPoint) -> NSIndexPath?
	func cellViewForMemeAtIndexPath(indexPath: NSIndexPath) -> UIView?
	func moveMemeAtIndexPath(from:NSIndexPath, toIndexPath to:NSIndexPath)
	@IBAction func shouldDeleteMeme(segue: UIStoryboardSegue)
	func deleteMemeAtIndexPath(indexPath:NSIndexPath)
	override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)
	func indexOfSendingCell(sender:AnyObject?) -> Int?
MemeStore.swift
	var _savedMemes: [Meme]!
	static let DocumentsDirectory = NSFileManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask).first!
	static let ArchiveURL = DocumentsDirectory.URLByAppendingPathComponent("savedMemes")
	static let UserDefaultsKey = "savedMemes"
	private override init()
	private var saveQueue: dispatch_queue_t!
	private var userInitiatedQueue: dispatch_queue_t
MemeViewer.swift
	var meme: Meme? {get set}
MemeTextStyle.swift
	let strokeColor = UIColor.blackColor()
	let fontName = "HelveticaNeue-CondensedBlack"
	let color =  UIColor.whiteColor()
	let strokeSize: CGFloat
	let fontSize: CGFloat
	var attributes: [String: AnyObject]
	init(fontSize: CGFloat, strokeSize: CGFloat )
MemeEditorAnimation.swift
	private struct AssociatedKeys
	static var OriginalValue = "mfa_original_value"
	var originalValue: CGFloat
	func delta()->CGFloat
	func reset()
	func shift(distance:CGFloat)
	func animateLayout()
	private func adjustTextFieldWidths(width:CGFloat)
	private func adjustTextFieldPositions(shift :CGFloat)
